name: Analyze Release
description: Analyzes conventional commits and outputs bump and next version.
outputs:
  last_tag:
    description: Ãšltimo tag encontrado
    value: ${{ steps.get_tag.outputs.last_tag }}
  bump:
    description: Calculated bump (patch, minor, major)
    value: ${{ steps.bump.outputs.bump }}
  next_version:
    description: Next calculated semver version
    value: ${{ steps.version.outputs.next_version }}

runs:
  using: "composite"
  steps:
    - name: Fetch tags
      run: git fetch --prune --tags
      shell: bash

    - name: Get latest stable tag
      id: get_tag
      run: |
        TAG=$(git tag --sort=-creatordate | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
        if [ -z "$TAG" ]; then
          echo "No stable tag found, assuming first release"
          echo "found_tag=false" >> $GITHUB_OUTPUT
          echo "last_tag=0.0.0" >> $GITHUB_OUTPUT
        else
          echo "Found stable tag: $TAG"
          echo "found_tag=true" >> $GITHUB_OUTPUT
          echo "last_tag=$TAG" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Print commits
      if: steps.get_tag.outputs.found_tag == 'true'
      run: git log ${{ steps.get_tag.outputs.last_tag }}..HEAD --pretty=format:"%H %s"
      shell: bash

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Run analyze-bump.js
      id: bump
      run: |
        if [ "${{ steps.get_tag.outputs.found_tag }}" == "false" ]; then
          echo "bump=first_release" >> $GITHUB_OUTPUT
        else
          BUMP=$(FROM_TAG="${{ steps.get_tag.outputs.last_tag }}" node ${{ github.action_path }}/analyze-bump.js | grep '^Determined bump' | sed 's/^Determined bump: //')
          echo "bump=$BUMP" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Calculate next version
      id: version
      if: steps.bump.outputs.bump != ''
      run: |
        if [ "${{ steps.get_tag.outputs.found_tag }}" == "false" ]; then
          echo "next_version=1.0.0" >> $GITHUB_OUTPUT
        else
          VERSION=$(npx --yes --package semver semver "${{ steps.get_tag.outputs.last_tag }}" -i "${{ steps.bump.outputs.bump }}")
          echo "next_version=$VERSION" >> $GITHUB_OUTPUT
        fi
      shell: bash